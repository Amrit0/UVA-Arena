<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>